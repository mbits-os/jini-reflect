{"name":"JINI Reflect","tagline":"","body":"## What is Reflect?\r\n\r\nReflect is a companion tool for the [JINI Library](http://github.com/mbits-os/jini) used to automatically generate the binding between Java and C++. The tool can create JINI bindings for given class or classes. It accepts the classes in `java.lang.Class` form to generate binding for that one class only or `java.lang.*` to generate it for all `java.lang` classes (but not `java.class.reflect` classes). When an internal class is provided (that is, when `$` is present), it will be replaced with the outer-most class.\r\n\r\n## Synopsis\r\n\r\n    java -jar reflect.jar [-h] -a API [-8] [--dest DIR] [--inc DIR] [--src DIR]\r\n                          [--preserve-refs] [--parents] [--all-deps] [--all]\r\n                          [--file-list FILE] [CLASS [CLASS ...]]\r\n\r\n#### Positional arguments:\r\n\r\n* __*CLASS*__ : class and/or package to generate bindings for.\r\n\r\n#### Android API Arguments:\r\n\r\n* __-a *API*__, __--android *API*__ : Android API Level (e.g. `-a 17` for Android 4.2).\r\n\r\n#### Optional arguments:\r\n\r\n* __-h__, __--help__ : show the help message and exit\r\n* __-8__, __--utf8__ : replace `java.lang.String` with `const char*` (default: `false`)\r\n* __--dest *DIR*__ : the output directory (default: `.\\code`)\r\n* __--inc *DIR*__ : the output directory for `.hpp` files (default: `$dest\\inc`)\r\n* __--src *DIR*__ : the output directory for `.cpp` files (default: `$dest\\src`)\r\n* __--preserve-refs__ : when Reflect encounters a type it shouldn't know about, it removes the declaration the type is in from the binding; the list of types Reflect should know about consists of builtin types, members of the `java.lang` package and the classes given as positional arguments; this turns this behaviour off (default: `false`)\r\n* __--parents__ : generate bindings for the super class and interfaces classes (default: `false`)\r\n* __--all-deps__ : generate bindings for the super class, interfaces, field and parameter classes; implies `--parent` and `--preserve-refs` (default: `false`)\r\n* __--all__ : Generate bindings for all the classes in the API; implies `--all-deps`, `--parent` and `--preserve-refs` (default: `false`)\r\n* __--file-list *FILE*__ : output list of generated files for further processing\r\n\r\n## Examples\r\n\r\n#### Help\r\n\r\n    $ java -jar path/to/reflect.jar --help\r\n\r\n#### Minimal Bitmap binding\r\n\r\nTo generate Android bindings big enough to manipulate bitmap's pixmap and blend it on the canvas:\r\n\r\n    $ java -jar path/to/reflect.jar -a 17 \\\r\n    > --parents \\\r\n    > android.graphics.Bitmap \\\r\n    > android.graphics.Canvas \\\r\n    > android.graphics.Paint\r\n\r\nThis will create headers and code for both `Bitmap` and `Canvas` and for their super classes up to and including `Object`. It will generate binding for the [drawBitmap(Bitmap,float,float,Paint)](http://developer.android.com/reference/android/graphics/Canvas.html#drawBitmap%28android.graphics.Bitmap,%20float,%20float,%20android.graphics.Paint%29) to be able to blend the bitmap. This will not, however, generate binding for [getScaledHeight(DisplayMetrics)](http://developer.android.com/reference/android/graphics/Bitmap.html#getScaledHeight%28android.util.DisplayMetrics%29), as neither `android.util.DisplayMetrics`, `--preserve-refs` nor `--all-deps` was given as an argument.\r\n\r\nTo generate `java.lang` package for the JINI project:\r\n\r\n    $ java -jar path/to/reflect.jar -a 17 \\\r\n    > -8 --all-deps java.lang.*\r\n\r\nAPI Documentation\r\n-----------------\r\n\r\nYou can create Javadocs with `javadoc:aggregate` mojo after cloning the repository:\r\n\r\n    $ mvn javadoc:aggregate\r\n\r\nThis will generate entire javadoc in `./target/site/apidocs`. Alternatively, you can go to [online docs](./apidocs).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}